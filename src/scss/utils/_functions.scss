@use 'sass:map';

@function _superget($type, $key, $obj, $defs) {
	@if map.has-key($obj, $key) {
		@return map.get($obj, $key);
	} @else if map.has-key($defs, $key) {
		@return map.get($defs, $key);
	} @else {
		@error "#{$type} #{$key} wasn\"t found";
	}
}

// Z-INDEX
$_z-indexes: () !default;
$_def-z-indexes: (
	app: 1,
	webgl: 0,
);

@function z($key) {
	@return _superget('Z-Index', $key, $_z-indexes, $_def-z-indexes);
}

// COLORS
$_colors: () !default;
$_def-colors: (
	black: #000,
	white: #fff,
);

@function colors($key) {
	@return _superget('Colors', $key, $_colors, $_def-colors);
}

// CONSTANTS
$_constants: () !default;
$_def-constants: ();

@function const($key) {
	@return _superget('Constants', $key, $_constants, $_def-constants);
}

// EASINGS
$_easings: () !default;
$_def-easings: ();

@function ease($key) {
	@return _superget('Easings', $key, $_easings, $_def-easings);
}

// BREAKPOINTS
$_bp_w: () !default;
$_bp_h: () !default;
$_def-bp_w: ();
$_def-bp_h: ();

@function bpw($key) {
	@return _superget('Bp W', $key, $_bp_w, $_def-bp_w);
}
@function bph($key) {
	@return _superget('Bp H', $key, $_bp_h, $_def-bp_h);
}
